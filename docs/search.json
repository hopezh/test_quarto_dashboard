[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "test quarto dashboard",
    "section": "",
    "text": "import polars as pl\nimport plotly.express as px\nimport plotly.graph_objects as go\n# create df for solar farms\ndata_solar_farms = {\n    \"name\"          : [\"Setouchi Kirei\", \"Eurus Rokkasho\", \"Tomatoh Abira\"],\n    \"capacity_mw\"   : [235, 148, 111],\n    \"latitude\"      : [34.6, 40.9, 42.7],\n    \"longitude\"     : [134.1, 141.3, 141.7],\n    \"state\"         : [\"Okayama\", \"Aomori\", \"Hokkaido\"],\n    \"city\"          : [\"Setouchi\", \"Rokkasho\", \"Abira\"],\n    \"year_operation\": [2018, 2015, 2015],\n}\ndf_solar_farms = pl.DataFrame(data_solar_farms)\n# create df for typhoon paths\ndata_typhoon = {\n    'name'            : ['Lan',  'Lan',  'Lan',  'Guc',  'Guc',  'Guc'],\n    'idx'             : [230701, 230702, 230703, 220301, 220302, 220303],\n    'latitude'        : [31.1,   36.6,   41.0,   31.8,   36.6,   37.8],\n    'longitude'       : [137.3,  133.0,  135.8,  128.4,  135.0,  142.2],\n    'date_time'       : [\n        '2022-08-07 00:00:00',\n        '2022-08-07 06:00:00',\n        '2022-08-07 12:00:00',\n        '2023-06-06 18:00:00',\n        '2023-06-07 00:00:00',\n        '2023-06-07 06:00:00',\n    ],\n    'grade'           : [1, 3, 2, 4, 6, 5]\n}\ndf_typhoon = pl.DataFrame(data_typhoon)\n#| title: map of typhoon paths\nfig_typhoon = px.line_mapbox(\n    df_typhoon,\n    lat='latitude',\n    lon='longitude',\n    color='name',\n    # animation_frame='name',\n)\n\nfig_typhoon.update_layout(\n    mapbox_style=\"carto-darkmatter\",\n    mapbox_center_lat=36,\n    mapbox_center_lon=138,\n    mapbox_zoom=3,\n)\n# show data structure of fig\n# print(fig_typhoon)\n#| title: map of typhoon paths\n# fig_typhoon = go.Figure(\n#     go.Scattermapbox(\n#         lat = df_typhoon['latitude'],\n#         lon = df_typhoon['longitude'],\n#         mode = 'lines+markers',\n#         # marker = go.scattermapbox.Marker(\n#         #     size=df_solar_farms['capacity_mw']/10\n#         # ),\n#     )\n# )\n\n# fig_typhoon.update_layout(\n#     mapbox_style=\"carto-darkmatter\",\n#     mapbox=dict(\n#         center=go.layout.mapbox.Center(\n#             lat=36,\n#             lon=138\n#         ),\n#         zoom=3\n#     ),\n# )\n#| title: map solar farms\nfig_solar_farms = go.Figure(\n    go.Scattermapbox(\n        lat = df_solar_farms['latitude'],\n        lon = df_solar_farms['longitude'],\n        mode = 'markers',\n        marker = go.scattermapbox.Marker(\n            size=df_solar_farms['capacity_mw']/10\n        ),\n    )\n)\n\nfig_solar_farms.update_layout(\n    mapbox_style=\"carto-darkmatter\",\n    mapbox=dict(\n        center=go.layout.mapbox.Center(\n            lat=36,\n            lon=138\n        ),\n        zoom=3\n    ),\n)\n# show data structure of fig_solar_farms\n# print(fig_solar_farms)\n# fig_solar_farms.show(\"json\") # not working...\n#| title: ??? \n# fig_solar_farms.add_trace(\n#     fig_typhoon.data[0]\n# )"
  }
]